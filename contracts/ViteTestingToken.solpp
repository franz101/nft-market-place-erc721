ERC20
ERC721

 Copy to Clipboard
 Open in Remix
 Download
settings
Name

Symbol

Base URI

features
Mintable
Auto Increment Ids
Burnable
Pausable
Votes
Enumerable
URI Storage
access control
Ownable
Roles
upgradeability

Transparent
UUPS
info
Security Contact

License

 Forum
 Docs
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

import "@openzeppelin/contracts/token/ERC721/ERC721.sol";
import "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract ViteTestNFT is ERC721, ERC721Enumerable, Ownable {
    constructor() ERC721("ViteTestNFT", "VTN") {}

    function safeMint(address to, uint256 tokenId) public onlyOwner {
        _safeMint(to, tokenId);
    }

    // The following functions are overrides required by Solidity.

    function _beforeTokenTransfer(address from, address to, uint256 tokenId)
        internal
        override(ERC721, ERC721Enumerable)
    {
        super._beforeTokenTransfer(from, to, tokenId);
    }

    function supportsInterface(bytes4 interfaceId)
        public
        view
        override(ERC721, ERC721Enumerable)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
}